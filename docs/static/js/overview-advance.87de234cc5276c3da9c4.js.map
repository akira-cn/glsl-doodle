{"version":3,"sources":["/Users/wuliang/WorkSpace.localized/glsl-doodle/doc-src/components/demoground.js","/Users/wuliang/WorkSpace.localized/glsl-doodle/doc-src/components/github.js","/Users/wuliang/WorkSpace.localized/glsl-doodle/doc-src/components/nav.js","/Users/wuliang/WorkSpace.localized/glsl-doodle/doc-src/overview/advance.mdx"],"names":["iframeStyle","width","height","this","props","border","margin","source","demoId","window","location","hostname","src","scrolling","style","Component","position","right","ref","href","link","className","aria-label","viewBox","aria-hidden","color","opacity","d","fill","transformOrigin","root","target","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"6vBAGE,WACE,IAAMA,EAAc,CAClBC,MAAO,OACPC,OAAO,GAAD,OAAKC,KAAKC,MAAMF,QAAU,IAA1B,MACNG,OAAQ,iBACRC,OAAQ,UAENC,EAAM,sCAAkCJ,KAAKC,MAAMI,QAIvD,MAHgC,cAA7BC,OAAOC,SAASC,WACjBJ,EAAM,6BAAyBJ,KAAKC,MAAMI,SAG1C,4BAAQI,IAAKL,EACXM,UAAU,MACVC,MAAOd,Q,GAfce,a,64BCC3B,WACE,OACE,yBAAKD,MAAO,CAACE,SAAU,QAASf,MAAO,IAAKgB,MAAO,GAAIC,IAAI,WAAU,uBAAGC,KAAMhB,KAAKC,MAAMgB,KAAMC,UAAU,gBAAgBC,aAAW,yBAAwB,yBAAKC,QAAQ,cAAcC,cAAY,OAAOV,MAAO,CAACW,MAAO,OAAQC,QAAS,KAAM,0BAAMC,EAAE,sDAA2D,0BAAMA,EAAE,2LAA2LC,KAAK,eAAed,MAAO,CAACe,gBAAiB,eAAgBR,UAAU,aAAkB,0BAAMM,EAAE,shBAAshBC,KAAK,eAAeP,UAAU,qB,GAHpnCN,a,s4BCC3B,WACE,IAAIe,EAAO,QAIX,MAHgC,cAA7BrB,OAAOC,SAASC,WACjBmB,EAAO,oBAGP,yBAAKT,UAAU,WACb,uBAAGF,KAAK,KAAR,QACA,uBAAGA,KAAMW,EAAMC,OAAO,UAAtB,a,GATqBhB,a,goBCSvBiB,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACG9B,EACF,iBACD,OAAO,YALS,UAKT,iBAAe4B,EAAiB5B,EAAhC,CAAuC8B,WAAYA,EAAYC,QAAQ,cAE5E,YAAC,IAAD,CAAQf,KAAK,0CAA0Ce,QAAQ,WAC/D,YAAC,IAAD,CAAKA,QAAQ,QACb,kBACE,GAAM,8BADR,8BAGA,wOACA,YAAC,IAAD,CAAY3B,OAAO,kBAAkBN,OAAO,MAAMiC,QAAQ,eAC1D,iDAAsB,iBAAGC,WAAW,IAChC,KAAQ,2CADU,eAAtB,mIAGA,qBAAG,0BAAYA,WAAW,KAAvB,iBAAH,wJACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,sDAIL,qBAAG,0BAAYA,WAAW,KAAvB,oBAAH,6NACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,0DAIL,kBACE,GAAM,8BADR,8BAGA,qOACA,YAAC,IAAD,CAAY5B,OAAO,cAAcN,OAAO,MAAMiC,QAAQ,eACtD,kBACE,GAAM,0CADR,0CAGA,2IAAoD,0BAAYC,WAAW,KAAvB,sCAApD,qDACA,YAAC,IAAD,CAAY5B,OAAO,gBAAgBN,OAAO,MAAMiC,QAAQ,eACxD,kBACE,GAAM,wBADR,wBAGA,wKACA,mHACA,YAAC,IAAD,CAAY3B,OAAO,wBAAwBN,OAAO,MAAMiC,QAAQ,eAChE,iFAAwB,iBAAGC,WAAW,IAClC,KAAQ,aADY,yBAAxB,UAGA,kBACE,GAAM,wCADR,wCAGA,6MACA,YAAC,IAAD,CAAY5B,OAAO,gBAAgBN,OAAO,MAAMiC,QAAQ,gB,kLAK5DF,EAAWI,gBAAiB","file":"static/js/overview-advance.07d303ab.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class extends Component {\n  render() {\n    const iframeStyle = {\n      width: '100%',\n      height: `${this.props.height || 420}px`,\n      border: 'solid 1px #ccc',\n      margin: '10px 0',\n    };\n    let source = `//doodle.webgl.group/demo/#/${this.props.demoId}`;\n    if(window.location.hostname === '127.0.0.1') {\n      source = `//localhost:3030/#/${this.props.demoId}`;\n    }\n    return (\n      <iframe src={source}\n        scrolling=\"yes\"\n        style={iframeStyle}\n      ></iframe>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div style={{position: 'fixed', width: 100, right: 0}} ref=\"codepen\"><a href={this.props.link} className=\"github-corner\" aria-label=\"View source on Github\"><svg viewBox=\"0 0 250 250\" aria-hidden=\"true\" style={{color: '#fff', opacity: 0.8}}><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{transformOrigin: '130px 106px'}} className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg></a></div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nexport default class extends Component {\n  render() {\n    let root = '/demo';\n    if(window.location.hostname === '127.0.0.1') {\n      root = '//localhost:3030';\n    }\n    return (\n      <nav className=\"app-nav\">\n        <a href=\"/\">Home</a>\n        <a href={root} target=\"_blank\">Demo</a>\n      </nav>\n    );\n  }\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GitHub from '../components/github'\nimport Nav from '../components/nav';\nimport DemoGround from '../components/demoground';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <GitHub link=\"https://github.com/akira-cn/glsl-doodle\" mdxType=\"GitHub\" />\n    <Nav mdxType=\"Nav\" />\n    <h2 {...{\n      \"id\": \"使用-doodle-类\"\n    }}>{`使用 Doodle 类`}</h2>\n    <p>{`我们可以不使用 glsl-doodle 标签，而直接使用 Doodle 类，这样我们可以使用更多的功能。`}</p>\n    <DemoGround demoId=\"docs/doodle-obj\" height=\"370\" mdxType=\"DemoGround\"></DemoGround>\n    <p>{`glsl-doodle 基于 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/akira-cn/gl-renderer\"\n      }}>{`gl-renderer`}</a>{`，Doodle 类继承 GlRenderer 类，因此可以用它的所有方法。`}</p>\n    <p><inlineCode parentName=\"p\">{`doodle.load()`}</inlineCode>{` 可以加载外部文件，它是一个异步接口，返回 program 对象。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const program = await doodle.load(fragmentURL);\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`doodle.compile()`}</inlineCode>{` 则直接编译字符串，由于 glsl-doodle 支持 include，所以它也是异步接口，同样返回 program 对象。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const program = await doodle.compile(fragmentCode);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"加载-vertex-shader\"\n    }}>{`加载 vertex shader`}</h2>\n    <p>{`glsl-doodle 会自动加载默认的顶点着色器，而我们可以手工加载自己的顶点着色器：`}</p>\n    <DemoGround demoId=\"docs/vertex\" height=\"370\" mdxType=\"DemoGround\"></DemoGround>\n    <h2 {...{\n      \"id\": \"使用自定义-uniform\"\n    }}>{`使用自定义 uniform`}</h2>\n    <p>{`在 shader 中声明的 uniform 变量，在 glsl-doodle 中可以通过 `}<inlineCode parentName=\"p\">{`doodle.uniforms.变量名`}</inlineCode>{` 的方式直接赋值：`}</p>\n    <DemoGround demoId=\"docs/uniforms\" height=\"370\" mdxType=\"DemoGround\"></DemoGround>\n    <h2 {...{\n      \"id\": \"内建-uniform\"\n    }}>{`内建 uniform`}</h2>\n    <p>{`实际上 glsl-doodle 支持一系列内建的 uniform，这些 uniform 以 dd_ 开头。`}</p>\n    <p>{`例如，上面的例子可以直接写成：`}</p>\n    <DemoGround demoId=\"docs/buildin-uniforms\" height=\"370\" mdxType=\"DemoGround\"></DemoGround>\n    <p>{`其他内建 uniform 详见文档`}<a parentName=\"p\" {...{\n        \"href\": \"/uniforms\"\n      }}>{`内建 uniforms`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"使用网格数据\"\n    }}>{`使用网格数据`}</h2>\n    <p>{`我们可以使用 setMeshData 给 doodle 传入数据，glsl-doodle 会使用当前的 program 完成渲染。`}</p>\n    <DemoGround demoId=\"docs/meshdata\" height=\"370\" mdxType=\"DemoGround\"></DemoGround>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}